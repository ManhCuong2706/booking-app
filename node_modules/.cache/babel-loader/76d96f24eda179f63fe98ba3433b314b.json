{"ast":null,"code":"var _jsxFileName = \"D:\\\\FUNIX\\\\ReactJs\\\\Assignment\\\\NGUYEN-XUAN-MANH-CUONG-FX171714 -Assignment 01\\\\src\\\\components\\\\Header\\\\HeaderSearch\\\\SearchOption\\\\HeaderDateRange.jsx\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport format from 'date-fns/format';\nimport { DateRange } from 'react-date-range';\nimport React, { useState, useRef, useEffect } from 'react';\nimport '../../../../assets/scss/components/Header/HeaderDateRange.scss';\nimport 'react-date-range/dist/styles.css';\nimport 'react-date-range/dist/theme/default.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nHeaderDateRange.propTypes = {\n  range: PropTypes.array,\n  onDateRangeChange: PropTypes.func\n};\nHeaderDateRange.defaultProps = {\n  range: [],\n  onDateRangeChange: null\n};\n\nfunction HeaderDateRange(props) {\n  _s();\n\n  const {\n    range,\n    onDateRangeChange\n  } = props;\n  const [open, setOpen] = useState(false);\n  const refOne = useRef(null);\n\n  const handleSelect = date => {\n    if (!onDateRangeChange) return;\n    onDateRangeChange(date);\n  }; // useEffect(() => {\n  //   document.addEventListener('keydown', hideOnEscape, true);\n  //   document.addEventListener('click', hideOnClickOutSide, true);\n  // }, []);\n  // const hideOnEscape = (e) => {\n  //   if (e.key === 'Escape') {\n  //     setOpen(false);\n  //   }\n  // };\n  // const hideOnClickOutSide = (e) => {\n  //   if (refOne.current && !refOne.current.contains(e.target)) {\n  //     setOpen(false);\n  //   }\n  // };\n\n\n  const handleDateOpen = () => {\n    setOpen(!open);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dateRange\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"headerSearch__text\",\n      onClick: handleDateOpen,\n      children: `${format(range[0].startDate, 'MM/dd/yyyy')} to ${format(range[0].endDate, 'MM/dd/yyyy')}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), open && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dateRange__container\",\n      ref: refOne,\n      children: /*#__PURE__*/_jsxDEV(DateRange, {\n        onChange: handleSelect,\n        showSelectionPreview: true,\n        moveRangeOnFirstSelection: false,\n        months: 2,\n        ranges: range,\n        direction: \"horizontal\",\n        preventSnapRefocus: true,\n        calendarFocus: \"backwards\",\n        minDate: new Date()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HeaderDateRange, \"Pu60ZTr8AFTawtrS+Z4TUm7nRkI=\");\n\n_c = HeaderDateRange;\nexport default HeaderDateRange;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderDateRange\");","map":{"version":3,"sources":["D:/FUNIX/ReactJs/Assignment/NGUYEN-XUAN-MANH-CUONG-FX171714 -Assignment 01/src/components/Header/HeaderSearch/SearchOption/HeaderDateRange.jsx"],"names":["PropTypes","format","DateRange","React","useState","useRef","useEffect","HeaderDateRange","propTypes","range","array","onDateRangeChange","func","defaultProps","props","open","setOpen","refOne","handleSelect","date","handleDateOpen","startDate","endDate","Date"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AAEA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,SAAjC,QAAiD,OAAjD;AAEA,OAAO,gEAAP;AACA,OAAO,kCAAP;AACA,OAAO,yCAAP;;AAEAC,eAAe,CAACC,SAAhB,GAA4B;AAC1BC,EAAAA,KAAK,EAAET,SAAS,CAACU,KADS;AAE1BC,EAAAA,iBAAiB,EAAEX,SAAS,CAACY;AAFH,CAA5B;AAKAL,eAAe,CAACM,YAAhB,GAA+B;AAC7BJ,EAAAA,KAAK,EAAE,EADsB;AAE7BE,EAAAA,iBAAiB,EAAE;AAFU,CAA/B;;AAKA,SAASJ,eAAT,CAAyBO,KAAzB,EAAgC;AAAA;;AAC9B,QAAM;AAACL,IAAAA,KAAD;AAAQE,IAAAA;AAAR,MAA6BG,KAAnC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMa,MAAM,GAAGZ,MAAM,CAAC,IAAD,CAArB;;AAEA,QAAMa,YAAY,GAAIC,IAAD,IAAU;AAC7B,QAAI,CAACR,iBAAL,EAAwB;AACxBA,IAAAA,iBAAiB,CAACQ,IAAD,CAAjB;AACD,GAHD,CAL8B,CAU9B;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMC,cAAc,GAAG,MAAM;AAC3BJ,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,oBAAhB;AAAqC,MAAA,OAAO,EAAEK,cAA9C;AAAA,gBACI,GAAEnB,MAAM,CAACQ,KAAK,CAAC,CAAD,CAAL,CAASY,SAAV,EAAqB,YAArB,CAAmC,OAAMpB,MAAM,CACvDQ,KAAK,CAAC,CAAD,CAAL,CAASa,OAD8C,EAEvD,YAFuD,CAGvD;AAJJ;AAAA;AAAA;AAAA;AAAA,YADF,EAQGP,IAAI,iBACH;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAsC,MAAA,GAAG,EAAEE,MAA3C;AAAA,6BACE,QAAC,SAAD;AACE,QAAA,QAAQ,EAAEC,YADZ;AAEE,QAAA,oBAAoB,EAAE,IAFxB;AAGE,QAAA,yBAAyB,EAAE,KAH7B;AAIE,QAAA,MAAM,EAAE,CAJV;AAKE,QAAA,MAAM,EAAET,KALV;AAME,QAAA,SAAS,EAAC,YANZ;AAOE,QAAA,kBAAkB,EAAE,IAPtB;AAQE,QAAA,aAAa,EAAC,WARhB;AASE,QAAA,OAAO,EAAE,IAAIc,IAAJ;AATX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GAxDQhB,e;;KAAAA,e;AA0DT,eAAeA,eAAf","sourcesContent":["import PropTypes from 'prop-types';\r\nimport format from 'date-fns/format';\r\nimport {DateRange} from 'react-date-range';\r\n\r\nimport React, {useState, useRef, useEffect} from 'react';\r\n\r\nimport '../../../../assets/scss/components/Header/HeaderDateRange.scss';\r\nimport 'react-date-range/dist/styles.css';\r\nimport 'react-date-range/dist/theme/default.css';\r\n\r\nHeaderDateRange.propTypes = {\r\n  range: PropTypes.array,\r\n  onDateRangeChange: PropTypes.func,\r\n};\r\n\r\nHeaderDateRange.defaultProps = {\r\n  range: [],\r\n  onDateRangeChange: null,\r\n};\r\n\r\nfunction HeaderDateRange(props) {\r\n  const {range, onDateRangeChange} = props;\r\n  const [open, setOpen] = useState(false);\r\n  const refOne = useRef(null);\r\n\r\n  const handleSelect = (date) => {\r\n    if (!onDateRangeChange) return;\r\n    onDateRangeChange(date);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   document.addEventListener('keydown', hideOnEscape, true);\r\n  //   document.addEventListener('click', hideOnClickOutSide, true);\r\n  // }, []);\r\n\r\n  // const hideOnEscape = (e) => {\r\n  //   if (e.key === 'Escape') {\r\n  //     setOpen(false);\r\n  //   }\r\n  // };\r\n  // const hideOnClickOutSide = (e) => {\r\n  //   if (refOne.current && !refOne.current.contains(e.target)) {\r\n  //     setOpen(false);\r\n  //   }\r\n  // };\r\n\r\n  const handleDateOpen = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <div className='dateRange'>\r\n      <span className='headerSearch__text' onClick={handleDateOpen}>\r\n        {`${format(range[0].startDate, 'MM/dd/yyyy')} to ${format(\r\n          range[0].endDate,\r\n          'MM/dd/yyyy'\r\n        )}`}\r\n      </span>\r\n\r\n      {open && (\r\n        <div className='dateRange__container' ref={refOne}>\r\n          <DateRange\r\n            onChange={handleSelect}\r\n            showSelectionPreview={true}\r\n            moveRangeOnFirstSelection={false}\r\n            months={2}\r\n            ranges={range}\r\n            direction='horizontal'\r\n            preventSnapRefocus={true}\r\n            calendarFocus='backwards'\r\n            minDate={new Date()}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeaderDateRange;\r\n"]},"metadata":{},"sourceType":"module"}